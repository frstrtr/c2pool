add_executable(t1 t1.cpp)
add_executable(t2 t2.cpp)
add_executable(t3 t3.cpp)
add_executable(t4 t4.cpp)
add_executable(make_dict make_dict.cpp)
add_executable(other other.cpp)
add_executable(def def.cpp def_macro.hpp new_macro.hpp)
add_executable(struct_for_struct struct_for_struct.cpp)
add_executable(template_macro template_macro.cpp)
add_executable(specificator_type specificator_type.cpp)
add_executable(addr_check addr_check.cpp)
target_link_libraries(addr_check core)

add_executable(constexpr_if constexpr_if.cpp)
add_executable(constexpr_if2 constexpr_if2.cpp)
add_executable(constexpr_if3 constexpr_if3.cpp)
add_executable(constexpr_if4 constexpr_if4.cpp)
add_executable(constexpr_if5 constexpr_if5.cpp)
add_executable(constexpr_if6 constexpr_if6.cpp)
add_executable(constexpr_variants constexpr_variants.cpp)
add_executable(constexpr_variants2 constexpr_variants2.cpp)
add_executable(constexpr_final1 constexpr_final1.cpp)
add_executable(constexpr_final2 constexpr_final2.cpp)
add_executable(constexpr_final_span constexpr_final_span.cpp)
add_executable(constexpr_final_pointers constexpr_final_pointers.cpp)
target_link_libraries(constexpr_final_pointers core)
add_executable(finaloptz finaloptz.cpp)
target_link_libraries(finaloptz core)
add_executable(constexpr_if7 constexpr_if7.cpp)
add_executable(constexpr_if8 constexpr_if8.cpp)
add_executable(spec_templ_local spec_templ_local.cpp)
add_executable(template_num template_num.cpp)
add_executable(template_num2 template_num2.cpp)
add_executable(check_templ_lambda_error check_templ_lambda_error.cpp)
add_executable(check_node check_node.cpp)
add_executable(base_node_check base_node_check.cpp)
add_executable(test_uint_hasher test_uint_hasher.cpp)
target_link_libraries(test_uint_hasher btclibs core)

add_executable(check_hash_uint256 check_hash_uint256.cpp)
target_link_libraries(check_hash_uint256 btclibs core)

add_executable(static_assert_check_templ static_assert_check_templ.cpp)
add_executable(get_chain_test get_chain_test.cpp)
target_compile_features(get_chain_test PRIVATE cxx_std_20)

add_executable(parse_bitcoin_index parse_bitcoin_index.cpp)
target_link_libraries(parse_bitcoin_index btclibs)

add_subdirectory(new_pack)
add_subdirectory(packv2)
add_subdirectory(shares)
add_subdirectory(coro)