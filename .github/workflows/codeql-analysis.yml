# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
# name: "CodeQL"

# on: [push, pull_request]

# env:
#   BUILD_TYPE: Debug

# jobs:
#   analyze:
#     name: Analyze
#     runs-on: ubuntu-latest

#     strategy:
#       fail-fast: false
#       matrix:
#         language: [ 'cpp', 'python' ]
#         name: [ubuntu-latest-g++]
#         include:
#           - name: ubuntu-latest-g++
#             os: ubuntu-latest
#             cxx: g++-8
#             cc: gcc-8

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     # Initializes the CodeQL tools for scanning.
#     - name: Initialize CodeQL
#       uses: github/codeql-action/init@v1
#       with:
#         languages: ${{ matrix.language }}
#         # If you wish to specify custom queries, you can do so here or in a config file.
#         # By default, queries listed here will override any specified in a config file.
#         # Prefix the list here with "+" to use these queries and those in the config file.
#         # queries: ./path/to/local/query, your-org/your-repo/queries@main
        
#     - name: Install libcurl
#       run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev

#     - name: GCC INSTALL
#       run: |
#         sudo apt install gcc-8 g++-8
#         sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    
#    # install dependencies
#     - name: Cache boost
#       uses: actions/cache@v1.0.3
#       id: cache-boost
#       with:
#         path: "~/boost"
#         key: libboost1.71-all-dev
#     - name: Install boost
#       run: |
#           sudo apt-get update && sudo apt-get install -yq libboost-filesystem1.71-dev && sudo apt-get install -yq libboost1.71-all-dev
#           mkdir -p ~/boost
#           for dep in libboost1.71-all-dev; do
#             dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
#           done
      
#     - name: Create Build Environment
    
#       # Some projects don't allow in-source building, so create a separate build directory
#       # We'll use this as our working directory for all subsequent commands
#       run: cmake -E make_directory ${{github.workspace}}/build

#     - name: Configure CMake
#       # Use a bash shell so we can use the same syntax for environment variable
#       # access regardless of the host operating system
#       shell: bash
#       working-directory: ${{github.workspace}}/build
#       # Note the current convention is to use the -S and -B options here to specify source 
#       # and build directories, but this is only available with CMake 3.13 and higher.  
#       # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
#       run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

#     - name: Build
#       working-directory: ${{github.workspace}}/build
#       shell: bash
#       # Execute the build.  You can specify a specific target with "--target <NAME>"
#       run: cmake --build . --config $BUILD_TYPE --target c2pool_main -j 6 --

#     # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
#     # If this step fails, then you should remove it and run the build manually (see below)
#     - name: Autobuild
#       uses: github/codeql-action/autobuild@v1

#     # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
#     # üìö https://git.io/JvXDl

#     # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
#     #    and modify them (or add more) to build your code if your project
#     #    uses a compiled language

#     #- run: |
#     #   make bootstrap
#     #   make release

#     - name: Perform CodeQL Analysis
#       uses: github/codeql-action/analyze@v1
