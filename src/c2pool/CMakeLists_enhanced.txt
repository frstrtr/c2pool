# Enhanced C2Pool Components

# Add include directory for the new modular structure
target_include_directories(btclibs PUBLIC 
    ${CMAKE_CURRENT_SOURCE_DIR}
)

# Hashrate Tracker Library
add_library(c2pool_hashrate
    hashrate/tracker.cpp
)
target_include_directories(c2pool_hashrate PUBLIC .)
target_link_libraries(c2pool_hashrate 
    btclibs
    nlohmann_json::nlohmann_json
)

# Difficulty Adjustment Engine Library  
add_library(c2pool_difficulty
    difficulty/adjustment_engine.cpp
)
target_include_directories(c2pool_difficulty PUBLIC .)
target_link_libraries(c2pool_difficulty 
    btclibs
    nlohmann_json::nlohmann_json
)

# Storage Manager Library
add_library(c2pool_storage
    storage/sharechain_storage.cpp
)
target_include_directories(c2pool_storage PUBLIC .)
target_link_libraries(c2pool_storage 
    core
    btclibs
    boost::boost
)

# Legacy Bridge Library
add_library(c2pool_bridge
    bridge/legacy_tracker_bridge.cpp
)
target_include_directories(c2pool_bridge PUBLIC .)
target_link_libraries(c2pool_bridge 
    sharechain
    c2pool_hashrate
    c2pool_difficulty
    nlohmann_json::nlohmann_json
)

# Enhanced Node Library
add_library(c2pool_node
    node/enhanced_node.cpp
)
target_include_directories(c2pool_node PUBLIC .)
target_link_libraries(c2pool_node 
    ltc
    core
    c2pool_hashrate
    c2pool_difficulty
    c2pool_storage
    c2pool_bridge
    nlohmann_json::nlohmann_json
)

# Main refactored application
add_executable(c2pool_enhanced c2pool_refactored.cpp)
target_link_libraries(c2pool_enhanced 
    c2pool_node
    c2pool_hashrate
    c2pool_difficulty
    c2pool_storage
    c2pool_bridge
    core
    ltc
    boost::boost
    nlohmann_json::nlohmann_json
)

# Keep original for compatibility
add_executable(c2pool_main c2pool.cpp)
target_link_libraries(c2pool_main 
    core
    ltc
    sharechain
    boost::boost
    nlohmann_json::nlohmann_json
)
